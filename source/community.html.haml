---
title: "#teamSass"
meta_desc: Интересные и полезные статьи о sass, чем живет сообщество sass, как помочь развитию sass
meta_key: sass, scss, codeschool, css-tricks, less, bower, book, compass, susy, foundation, bootstrap, sassdoc, sassmeister, somegrids, community, сообщество
---

- content_for :introduction do
  Sass имеет прекрасное сообщество дизайнеров и разработчиков, которые любят
  высказываться и помогать людям. На данной страничке собрана небольшая коллекция ресурсов.
  Стилизуйте на здоровье!



%ul.list-columns.anchors
  %li
    :markdown
      __Мы приветствуем всех в сообществе Sass, кроме тех, кто недоброжелателен
      по отношению к членам сообщества__. Пожалуйста, прочитайте и следуйте
      [принципам сообщества](/community-guidelines).

      Только __приступаете__? Есть несколько хороших [руководств](#Tutorials),
      которые помогут «встать на ноги». Хотите __больше__? Есть несколько
      хороших [блогов о Sass](#Blogs)(в том числе и [несколько статей](#Articles), которые мы
      рекомендуем прочитать), и даже [несколько книг о Sass](#Books), которые
      помогут Вам изучить много нового и полезного.

  %li
    :markdown
      Сообщество Sass невероятно. Существует ряд [фреймворков](#Frameworks),
      которые делают использование Sass простым. Хотите попробовать Sass
      на Node, Python или другом языке или фреймворке? Посетите
      [оболочки libSass](/libsass).

      Думаете __сделать вклад__ в развитие Sass? Мы принимаем во внимание
      любые факторы и идеи для того, чтобы оставаться постоянно стабильными.
      Не бойтесь [вносить правки через пулреквесты](#Contribute) в репозиторий Sass.

      Хотите создать свою реализацию Sass? Подробности на странице
      [руководство по внедрению](/implementation).


%hr/

.content-primary
  %h2#Articles Статьи о Sass
  %ul.articles
    - for article in data.community.articles
      %li
        %h3= link_to article.name, article.url
        %p= article.description

  %h2#Contribute Вклад в развитие
  %p Sass — проект с открытым исходным кодом и мы призываем Вас внести свой вклад.
  Вы можете внести свою лепту с помощью [сообщений об ошибках, общений с пожеланиями][issues], ну а если у Вас есть реальное решение,
  которое может нам всем помочь, то Вы останетесь в наших сердцах навсегда. Если вы хотите нам помочь, но не знаете как,
  то тег [Help Wanted][help] в трекере ошибок поможет вам увидеть задачи, по которым требуется помощь. Под этим тегом
  вы найдете множество запросов на добавление новых возможностей, багов и других задач, которые не требуют интенсивной
  разработки, и по мнению разработчиков такие задачи - хорошее место для новых участников разработки.

  :markdown
    Sass — [проект с открытым исходным кодом][github] и мы призываем Вас внести свой вклад. Вы можете внести свою лепту с помощью [сообщений об ошибках, общений с пожеланиями][issues], ну а если у Вас есть реальное решение,
    которое может нам всем помочь, то Вы останетесь в наших сердцах навсегда. Если вы хотите нам помочь, но не знаете как,
    то тег [Help Wanted][help] в трекере ошибок поможет вам увидеть задачи, по которым требуется помощь. Под этим тегом
    вы найдете множество запросов на добавление новых возможностей, багов и других задач, которые не требуют интенсивной
    разработки, и по мнению разработчиков такие задачи - хорошее место для новых участников разработки.

    [github]: https://github.com/sass/sass
    [issues]: https://github.com/sass/sass/issues
    [help]: https://github.com/sass/sass/labels/Help%20Wanted

    When writing code, there are two primary branches we use. The [stable
    branch][github] is the default; is where we do development on the released
    version of Sass. Bug fixes for released functionality, documentation
    improvements, and and general infrastructure stuff should all go on
    stable. The [master branch][master] is where we work on the next version
    of Sass. Once you've followed the steps below, new features should be
    submitted to master.

    [master]: https://github.com/sass/sass/tree/master
    [planned]: https://github.com/sass/sass/labels/Planned

    The Sass codebase is pretty big, and it can be intimidating to navigate it
    and understand the best way to make a change. If you need help, make a
    post on [the Sass mailing list][list]; the Sass developers are happy to
    assist, even if you don't have much experience with Ruby or programming as
    a whole. They can answer questions about how the system works, suggest
    avenues for solving problems, and review your code once it's written.

    [list]: https://groups.google.com/forum/#!forum/sass-lang

    Whether you're adding a feature or fixing a bug, if it changes publicly
    visible behavior, it's important to write automated tests for it. All the
    tests live in the `test/sass` directory; find the test file that's most
    closely related to your change, and add a test or tests there. For a
    feature, make sure your tests fully cover all the ways that feature could
    be used, including ways it could be invalid.

    Once you've written a patch with tests, send it to us as a
    [pull request][]. A developer will look it over, and will probably make
    some suggestions and requests. Once you address those, it'll get merged
    in!

    [pull request]: https://help.github.com/articles/creating-a-pull-request/

  %h2#AddingSyntax Adding Syntax

  :markdown
    The biggest and most impressive features of Sass usually involve adding
    new syntax of some sort. This can be pretty fun—something that used to be
    an error starts working because you made it—but syntax changes are also a
    lot of work. For statement-level syntax like a new `@`-rule, you have to:

    * Add a node for the syntax to the abstract syntax tree in
      [`lib/sass/tree`][tree].

    * Parse the syntax in SCSS to the node. The SCSS parser is in
      [`lib/sass/scss/parser.rb`][scss parser].

    * Parse the syntax in the indented syntax to the node. The indented
      syntax parser is in [`lib/sass/engine.rb`][sass parser].

    * Add support for setting the compilation options on the node in
      [`lib/sass/tree/visitors/set_options.rb`][set options].

    * Add support for cloning the node in
      [`lib/sass/tree/visitors/deep_copy.rb`][deep copy].

    * If the syntax is just something new from pure CSS, add support for
      compiling it to CSS in [`lib/sass/tree/visitors/to_css.rb`][to css]. If
      it's for a Sass feature that's not part of CSS, add runtime behavior in
      [`lib/sass/tree/visitors/perform.rb`][perform] or
      [`lib/sass/tree/visitors/cssize.rb`][cssize].

    * Add support for converting the syntax back to SCSS and the indented
      syntax with `sass-convert` in
      [`lib/sass/tree/visitors/convert.rb`][convert].
      Don't forget to test this conversion, too!

    [tree]: https://github.com/sass/sass/tree/stable/lib/sass/tree
    [script tree]: https://github.com/sass/sass/tree/stable/lib/sass/script/tree
    [scss parser]: https://github.com/sass/sass/tree/stable/lib/sass/scss/parser.rb
    [sass parser]: https://github.com/sass/sass/tree/stable/lib/sass/engine.rb
    [set options]: https://github.com/sass/sass/tree/stable/lib/sass/tree/visitors/set_options.rb
    [deep copy]: https://github.com/sass/sass/tree/stable/lib/sass/tree/visitors/deep_copy.rb
    [to css]: https://github.com/sass/sass/tree/stable/lib/sass/tree/visitors/to_css.rb
    [perform]: https://github.com/sass/sass/tree/stable/lib/sass/tree/visitors/perform.rb
    [cssize]: https://github.com/sass/sass/tree/stable/lib/sass/tree/visitors/cssize.rb
    [convert]: https://github.com/sass/sass/tree/stable/lib/sass/tree/visitors/convert.rb


.content-secondary
  %h3#Tutorials Руководства
  %ul
    - for tutorial in data.community.tutorials
      %li= link_to tutorial.name, tutorial.url

  %h3#Blogs Блоги о Sass
  %ul
    - for blog in data.community.blogs
      %li= link_to blog.name, blog.url

  %h3#Books Книги о Sass
  %ul
    - for book in data.community.books
      %li= link_to book.name, book.url

  %h3#Projects Проекты и фреймворки
  %ul
    - for project in data.community.projects
      %li
        = link_to project.name, project.url
        &mdash;
        = project.description
